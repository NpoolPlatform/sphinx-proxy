// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/NpoolPlatform/sphinx-proxy/pkg/db/ent/schema"
	"github.com/NpoolPlatform/sphinx-proxy/pkg/db/ent/transaction"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	transactionFields := schema.Transaction{}.Fields()
	_ = transactionFields
	// transactionDescNonce is the schema descriptor for nonce field.
	transactionDescNonce := transactionFields[1].Descriptor()
	// transaction.DefaultNonce holds the default value on creation for the nonce field.
	transaction.DefaultNonce = transactionDescNonce.Default.(uint64)
	// transactionDescTransactionType is the schema descriptor for transaction_type field.
	transactionDescTransactionType := transactionFields[2].Descriptor()
	// transaction.DefaultTransactionType holds the default value on creation for the transaction_type field.
	transaction.DefaultTransactionType = transactionDescTransactionType.Default.(int8)
	// transactionDescCoinType is the schema descriptor for coin_type field.
	transactionDescCoinType := transactionFields[3].Descriptor()
	// transaction.DefaultCoinType holds the default value on creation for the coin_type field.
	transaction.DefaultCoinType = transactionDescCoinType.Default.(int8)
	// transactionDescTransactionIDInsite is the schema descriptor for transaction_id_insite field.
	transactionDescTransactionIDInsite := transactionFields[4].Descriptor()
	// transaction.DefaultTransactionIDInsite holds the default value on creation for the transaction_id_insite field.
	transaction.DefaultTransactionIDInsite = transactionDescTransactionIDInsite.Default.(string)
	// transaction.TransactionIDInsiteValidator is a validator for the "transaction_id_insite" field. It is called by the builders before save.
	transaction.TransactionIDInsiteValidator = transactionDescTransactionIDInsite.Validators[0].(func(string) error)
	// transactionDescFrom is the schema descriptor for from field.
	transactionDescFrom := transactionFields[5].Descriptor()
	// transaction.DefaultFrom holds the default value on creation for the from field.
	transaction.DefaultFrom = transactionDescFrom.Default.(string)
	// transaction.FromValidator is a validator for the "from" field. It is called by the builders before save.
	transaction.FromValidator = transactionDescFrom.Validators[0].(func(string) error)
	// transactionDescTo is the schema descriptor for to field.
	transactionDescTo := transactionFields[6].Descriptor()
	// transaction.DefaultTo holds the default value on creation for the to field.
	transaction.DefaultTo = transactionDescTo.Default.(string)
	// transaction.ToValidator is a validator for the "to" field. It is called by the builders before save.
	transaction.ToValidator = transactionDescTo.Validators[0].(func(string) error)
	// transactionDescValue is the schema descriptor for value field.
	transactionDescValue := transactionFields[7].Descriptor()
	// transaction.DefaultValue holds the default value on creation for the value field.
	transaction.DefaultValue = transactionDescValue.Default.(float64)
	// transactionDescCreateAt is the schema descriptor for create_at field.
	transactionDescCreateAt := transactionFields[9].Descriptor()
	// transaction.DefaultCreateAt holds the default value on creation for the create_at field.
	transaction.DefaultCreateAt = transactionDescCreateAt.Default.(func() uint32)
	// transactionDescUpdateAt is the schema descriptor for update_at field.
	transactionDescUpdateAt := transactionFields[10].Descriptor()
	// transaction.DefaultUpdateAt holds the default value on creation for the update_at field.
	transaction.DefaultUpdateAt = transactionDescUpdateAt.Default.(func() uint32)
	// transaction.UpdateDefaultUpdateAt holds the default value on update for the update_at field.
	transaction.UpdateDefaultUpdateAt = transactionDescUpdateAt.UpdateDefault.(func() uint32)
	// transactionDescDeleteAt is the schema descriptor for delete_at field.
	transactionDescDeleteAt := transactionFields[11].Descriptor()
	// transaction.DefaultDeleteAt holds the default value on creation for the delete_at field.
	transaction.DefaultDeleteAt = transactionDescDeleteAt.Default.(func() uint32)
	// transactionDescID is the schema descriptor for id field.
	transactionDescID := transactionFields[0].Descriptor()
	// transaction.DefaultID holds the default value on creation for the id field.
	transaction.DefaultID = transactionDescID.Default.(func() string)
}
